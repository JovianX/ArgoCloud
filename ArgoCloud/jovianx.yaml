# JovianX API Compatibility
# v1
jovianx_api_version: v1

# Name of this SaaS application
# string
application_name: ArgoCloud

# Blueprint type.
# stack - Application stacks. Useful to provisioning cluster infrastructure and
#         setuping account application infrastructure.
# account - Application for account. Application that should be launched for
#           each account.
application_type: account

# version of this JovianX blueprint
# semantic versioning
version: 0.0.2

main_endpoint_component: ArgoCD

application_launch_timeout:
  tries_count: 120
  seconds_between_tries: 5

status_check:
  failure_threshold: 1

components:
  - name: ArgoCD
    version: 3.6.8 # Chart version
    provider: helm_chart # helm_chart | docker
    helm_chart_name: argo-cd
    helm_set:
      - key: controller.clusterAdminAccess.enabled
        value: false
      - key: server.ingress.hosts[0]
        value: '{{ account://end_company }}.argocloud.io'
      - key: server.ingress.tls[0].secretName
        value: argo-cert-secret
      - key: server.ingress.tls[0].hosts[0]
        value: '{{ account://end_company }}.argocloud.io'
      - key: configs.clusterCredentials[0].name
        value: '{{ account://end_company }}-default'
      - key: configs.clusterCredentials[0].config.tlsClientConfig.insecure
        value: false
      # - key: server.config.accounts.'{{ account://admin_email }}'
      #   value: 'apikey\, login'
      - key: server.config.url
        value: '{{ account://end_company }}.argocloud.io'
      - key: configs.secret.argocdServerAdminPassword
        value: '$2a$10$S5eSzlX01u1DjAsp8gtn0.7.mFCG4DnOcdjxTfVOge/nEzubn6WXK'
      - key: company
        value: "{{ account://end_company }}"
      - key: admin_email
        value: "{{ account://admin_email }}"
      - key: admin_password
        value: "{{ account://admin_password }}"
        
    endpoints:
      - name: 'application_web_interface'
        service_name: '{{application://components/ArgoCD/helm_release_name}}-argocd-server'
        type: entry_point
        entry_point_url: 'http://{{ account://end_company }}.argocloud.io'
        dns: '{{ account://end_company }}.argocloud.io'
        port: 80
        path: /

settings_descriptors:
  - name: Kubernetes API server
    display: 'Enter the url to your k8s server'
    description: 'Enter the url to your k8s server. To get all needed values - direct your kubectl to the cluster context and run: bash <(curl -L https://git.io/JCEbo) '
    input_type: string
    description_title: 'Enter the url to your k8s server'
    components:
      - name: ArgoCD
        helm_set:
          - key: configs.clusterCredentials[0].server
  - name: Kubernetes API token
    display: 'Enter the token to your k8s server'
    description: 'Enter the token to your k8s server. To get all needed values - direct your kubectl to the cluster context and run: bash <(curl -L https://git.io/JCEbo) '
    input_type: string
    description_title: 'Enter the token to your k8s server'
    components:
      - name: ArgoCD
        helm_set:
          - key: configs.clusterCredentials[0].config.bearerToken
  - name: Kubernetes API CA
    display: 'Enter the CA for your k8s server'
    description: 'Enter the CA for your k8s server. To get all needed values - direct your kubectl to the cluster context and run: bash <(curl -L https://git.io/JCEbo) '
    input_type: string
    description_title: 'Enter the CA for your k8s server'
    components:
      - name: ArgoCD
        helm_set:
          - key: configs.clusterCredentials[0].config.tlsClientConfig.caData
# hooks:
#   post_install:
#     - name: add-user
#       provider: docker
#       image: 'otomato/argocd_kubectl:with_script'
#       service_account_name: argocd-server
#       service_account_name: jovianx-admin
#       env:
#         - name: COMPANY
#           value: "{{ account://end_company }}"
#         - name: ADMIN_EMAIL
#           value: "{{ account://admin_email }}"
#       command: ["/myscript/setup.sh"]
#       args: ["stam"]